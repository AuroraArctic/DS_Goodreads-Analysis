top_books_plot<-top_books %>%
ggplot(aes(x=book_title, y=ratings)) +
geom_point(size=3) +
geom_segment(aes(x=book_title,
xend=book_title,
y=0,
yend=ratings)) +
labs(title="Top books")+
theme()+
coord_flip()
library(tidyr)
library(dplyr)
library(ggplot2)
library(data.table)
library(lubridate)
goodreads <- read.csv("good_reads_final.csv")
df <- goodreads
fwrite(df,"good.csv")
goodreads<- fread("good.csv",encoding="UTF-8")
goodreads<-goodreads %>%
mutate(author_genres = stringr::str_replace(author_genres,",","/")) %>%
separate(author_genres,into=c("first_genre","other_genre"),sep="/") %>%
mutate(other_genre = ifelse(is.na(other_genre) | other_genre=="", "unknown",other_genre)) %>%
mutate(other_genre = stringr::str_replace_all(other_genre,",","")) %>%
mutate(pages = as.integer(pages)) %>%
mutate(author_name = stringr::str_replace_all(author_name, "\n","")) %>%
mutate(birthplace = stringr::str_replace_all(birthplace, "\n",""))%>%
mutate(book_title = stringr::str_replace_all(book_title, "\n","")) %>%
mutate(first_genre = stringr::str_replace_all(first_genre,"-"," "),
other_genre = stringr::str_replace_all(other_genre,"-"," ")) %>%
mutate(birthplace = stringr::str_replace_all(birthplace, "  ","")) %>%
mutate(birthplace = ifelse(birthplace == "","unknown",birthplace)) %>%
separate(publish_date,into=c("other","year"),sep=-4) %>%
select(-other, -author_page_url,-book_fullurl) %>%
mutate(year = ifelse(year=="" | grepl("th",year),NA,year)) %>%
mutate(year = as.integer(year))
head(goodreads,n=10)
authors<-goodreads %>%
select(author_average_rating:birthplace, book_id) %>%
select(author_id, author_name,everything()) %>%
group_by(author_name, author_gender) %>%
summarise(ratings=sum(author_rating_count), reviews = sum(author_review_count),n_books=n()) %>%
arrange(-ratings, -reviews)
authors
most_rated_authors <- authors %>%
arrange(-ratings) %>%
head(n=10) %>%
gather("ratings","reviews", key="type",value="number")
ggplot(most_rated_authors, aes(x=reorder(author_name,-number)))+
geom_bar(stat="identity", position="dodge",aes(y=number/1000000,fill=type)) +
labs(x = "Nome dell'autore", y="Numero di rating", title="Numero di valutazioni e recensioni (in milioni)")+
geom_text(aes(label=author_name), stat="count", size=3,angle=90, vjust=-0.5, hjust=-0.2)+
theme(axis.text.x=element_blank())
library(modelr)
rew_rat<- lm(reviews~ratings,authors)
authors %>% add_predictions(rew_rat) %>%
ggplot(aes(ratings))+
geom_jitter(aes(y=reviews), alpha = 0.5)+
geom_line(aes(y=pred), color="red3", size=1.6)
authors %>% add_predictions(rew_rat) %>%
ggplot(aes(ratings))+
geom_jitter(aes(y=reviews), alpha=0.5)+
geom_line(aes(y=pred), color="red3", size=1.6)+
scale_y_log10(limits=c(1,NA))
summary(authors$reviews)
authors %>% add_predictions(rew_rat) %>%
add_residuals(rew_rat) %>%
ggplot(aes(ratings))+
geom_ref_line(h=0)+
geom_point(aes(y=resid))
summary(rew_rat)
rating<- authors %>%
select(author_name, reviews) %>%
left_join(select(goodreads, author_name, author_average_rating)) %>%
unique()
rating
ggplot(rating, aes(y=reviews,x=author_average_rating ))+
geom_jitter(aes(color=reviews))
summary(rating$author_average_rating)
authors %>%
arrange(-reviews) %>%
ggplot(aes(x = n_books, y=reviews))+
geom_bar(stat="identity", aes(fill=reviews))+
scale_x_discrete(breaks = c(seq(1,6)))+
labs(x="Numero di libri scritti", y="Valutazioni")
summary(as.integer(authors$n_books))
authors$n_books = as.factor(authors$n_books)
authors %>%
arrange(-reviews) %>%
ggplot(aes(x = n_books))+
geom_bar(aes(fill = reviews), stat="count", fill="blue3")+
scale_x_discrete(breaks = c(seq(1,6)))+
labs(x="Numero di libri scritti", y="Scrittori")+
geom_text(aes(label=..count..),stat="count",vjust=-0.2)
ggplot(authors, aes(n_books,reviews))+
geom_boxplot(outlier.color = "blue", outlier.shape = NA)+
coord_flip()+
scale_y_discrete(breaks=seq(1,10,by=2))
library(gridExtra)
par(mfrow = c(2,1))
genres1 <- goodreads %>%
count(genre_1) %>%
rename(genre = genre_1)
genres2 <- goodreads %>%
count(genre_2) %>%
rename(genre = genre_2)
genres <- full_join(genres1,genres2, by="genre") %>%
mutate(n.x = ifelse(is.na(n.x),0,n.x),
n.y = ifelse(is.na(n.y),0,n.y))%>%
group_by(genre) %>%
summarise(n = n.x+n.y)
loved_genres<- genres %>%
arrange(-n) %>%
head(10)
hollow_genres <- genres %>%
arrange(n) %>%
head(10)
loved_genres2<- loved_genres %>%
ggplot(aes(x=reorder(genre,n),y=n,fill=reorder(genre,n)))+
geom_bar(stat="identity", show.legend = TRUE)+
coord_polar(theta="y")+
theme_void()+
labs(title="Generi pi√π famosi",
fill="Genere")
hollow_genres2 <- hollow_genres %>%
ggplot(aes(x=reorder(genre,n),y=n,fill=reorder(genre,n)))+
geom_bar(stat="identity", show.legend = TRUE)+
coord_polar(theta="y")+
theme_void()+
labs(title="Generi di nicchia",
fill="Genere")
grid.arrange(loved_genres2,hollow_genres2,ncol=2)
authors %>%
group_by(author_gender) %>%
summarise(n=n())
authors %>%
ggplot(aes(x = n_books))+
geom_bar(stat="count",position="dodge", aes(fill=author_gender))+
labs(x="Numero di libri scritti", y="Scrittori")+
geom_text(aes(label=..count..), stat="count",
position=position_dodge(width=1))
ggplot(authors, aes(x=author_gender, y=reviews, color=author_gender))+
geom_boxplot(outlier.size=2)+
scale_y_log10()
summary(authors$reviews)
#Sopra il quantile 75%
authors[authors$reviews > quantile(authors$reviews,0.75) | authors$reviews < quantile(authors$reviews,0.25) ,] %>%
transform(quantile = ifelse(reviews > quantile(authors$reviews,0.75),0.75,0.25)) %>%
group_by(author_gender, quantile) %>%
summarise(n=n())
n_writers <- nrow(authors)
authors %>%
ggplot(aes(x = n_books))+
geom_bar(position="dodge", aes(y=..count..,fill=author_gender))+
labs(x="Numero di libri scritti", y="Scrittori")
goodreads %>%
select(birthplace) %>%
count(birthplace) %>%
arrange(-n) %>%
head(30)
top30countries <- goodreads %>%
select(birthplace, author_gender) %>%
count(birthplace, author_gender) %>%
filter(birthplace !="unknown") %>%
arrange(-n) %>%
head(30)
ggplot(top30countries,aes(birthplace,n))+
geom_bar(stat="identity", position="dodge", aes(fill=author_gender))+
geom_segment(aes(x=birthplace,
xend=birthplace,
y=min(n),
yend=max(n)),
linetype="dashed",
size=0.05,
color="grey")+
coord_flip()+
theme_classic()
library(DT)
book_list <- goodreads %>%
select(book_title,author_name, book_average_rating,genre_1,genre_2, pages, num_ratings) %>%
rename(rating = book_average_rating) %>%
arrange(-rating) %>%
unique()
DT::datatable(book_list)
ggplot(goodreads,aes(book_average_rating))+
geom_histogram(fill="lightblue")+
geom_freqpoly(color="blue")
rating_cor<- goodreads %>%
select(author_average_rating,book_average_rating) %>%
mutate(author_average_rating = round(author_average_rating,0),
book_average_rating = round(book_average_rating,0)) %>%
rename(autore = author_average_rating,libro = book_average_rating)
library(corrplot)
corrplot(cor(rating_cor),method="color")
goodreads %>%
group_by(year) %>%
summarise(n_books = n()) %>%
ggplot(aes(year,n_books))+
geom_line()+
scale_x_continuous()
summary(goodreads$year)
top_books<-goodreads %>%
select(book_id,book_title,num_ratings) %>%
group_by(book_title, book_id) %>%
summarise(ratings = sum(num_ratings))%>%
arrange(-ratings) %>%
left_join(select(goodreads,author_name,book_title)) %>%
unique() %>%
head(n=20)
DT::datatable(top_books)
library(plotly)
top_books_plot<-top_books %>%
ggplot(aes(x=book_title, y=ratings)) +
geom_point(size=3) +
geom_segment(aes(x=book_title,
xend=book_title,
y=0,
yend=ratings)) +
labs(title="Top books")+
theme()+
coord_flip()
ggplotly(top_books_plot)
top_books_plot<-top_books %>%
ggplot(aes(x=book_title, y=ratings)) +
geom_point(size=3) +
geom_segment(aes(x=book_title,
xend=book_title,
y=0,
yend=ratings)) +
labs(title="Top books")+
theme()+
coord_flip()
ggplotly(top_books_plot)
top_books_plot<-top_books %>%
ggplot(aes(x=book_title, y=ratings)) +
geom_point(size=3,
text=sprintf("autore: %s", author_name)) +
geom_segment(aes(x=book_title,
xend=book_title,
y=0,
yend=ratings)) +
labs(title="Top books")+
theme()+
coord_flip()
top_books
top_books_plot<-top_books %>%
ggplot(aes(x=book_title, y=ratings, text=author_name)) +
geom_point(size=3) +
geom_segment(aes(x=book_title,
xend=book_title,
y=0,
yend=ratings)) +
labs(title="Top books")+
theme()+
coord_flip()
ggplotly(top_books_plot) %>%
hover
ggplotly(top_books_plot)
ggplotly(top_books_plot, tooltip = "text")
top_books %>%
left_join(select(authors,author_name,author_gender), by="author_name")
top_books_plot<-top_books %>%
left_join(select(authors,author_name,author_gender), by="author_name") %>%
ggplot(aes(x=book_title, y=ratings, text=author_name, color=author_name)) +
geom_point(size=3) +
geom_segment(aes(x=book_title,
xend=book_title,
y=0,
yend=ratings)) +
labs(title="Top books")+
theme()+
coord_flip()
ggplotly(top_books_plot, tooltip = "text")
top_books_plot<-top_books %>%
left_join(select(authors,author_name,author_gender), by="author_name") %>%
ggplot(aes(x=book_title, y=ratings, text=author_name, color=author_gender)) +
geom_point(size=3) +
geom_segment(aes(x=book_title,
xend=book_title,
y=0,
yend=ratings)) +
labs(title="Top books")+
theme()+
coord_flip()
ggplotly(top_books_plot, tooltip = "text")
ggplot(goodreads,aes(book_average_rating))+
geom_histogram(fill="lightblue", binwidth = 2)+
geom_freqpoly(color="blue")
ggplot(goodreads,aes(book_average_rating))+
geom_histogram(fill="lightblue", binwidth = 1)+
geom_freqpoly(color="blue")
ggplot(goodreads,aes(book_average_rating))+
geom_histogram(fill="lightblue")+
geom_freqpoly(color="blue")
library(corrplot)
rating_cor<- goodreads %>%
select(author_average_rating,book_average_rating) %>%
mutate(author_average_rating = round(author_average_rating,0),
book_average_rating = round(book_average_rating,0)) %>%
rename(autore = author_average_rating,libro = book_average_rating)
library(corrplot)
corrplot(cor(rating_cor),method="color")
